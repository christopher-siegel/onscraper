{"articles":[{"title":"Das 1×1 des Zeitmanagements","cat":"ON-Guide","date":"20. Januar 2015","author":"Elena BeckerLisa Smuikat","content":"Studenten der Dualen Hochschule sind mit ständigem Zeitdruck gesegnet. Viele Projekte, viele Klausuren und viele Selbststudiumsphasen müssen so koordiniert werden, dass die 24 Stunden des Tages ausreichen, um alles zu schaffen. Deswegen haben wir für euch, die stets zu wenig Zeit haben ein paar Tipps zum besseren Zeitmanagement.\n\nGenau genommen kann man keine Zeit managen, da die Zeit konstant läuft. Denn ein Tag hat eben nur 24 Stunden zur Verfügung. Vielmehr muss die gegebene Zeit sinnvoll genutzt werden. Jeder kennt die Phasen, in denen er sich vornimmt viel zu arbeiten und zu lernen, doch dann kommt immer etwas dazwischen. Sind wir mal ehrlich: Uns kommt doch gerne etwas dazwischen, es ist einfach die perfekte Ausrede. Doch genau diese Situationen wollen wir zu vermeiden lernen. Wir wollen die Zeit so nutzen, dass sich der Ausgleich zwischen Lernen, Arbeit und Freizeit im Einklang befindet. Das ist einfacher als es sich anhört.Nichts vergessen!Am wichtigsten ist immer zu wissen was ansteht. Legt euch einen Terminplaner an. Ob digital (z. B. Evernote, Wunderlist, Google Calendar) oder in alt bewährter Buchform ist völlig egal. Schreibt euch eure Termine auf und erinnert euch selbst eine Woche vorher nochmal daran. Solltet euch einmal eine wichtige Aufgabe, ein Termin oder ähnliches plötzlich einfallen, schreibt es sofort auf, ob als Notiz im Handy unterwegs oder in eurem Planer. So vergesst ihr eure Termine und Aufgaben nicht und könnt sie zeitlich besser einordnen.Prioritäten setzen!Ihr müsst viele Dinge gleichzeitig erledigen? Bevor ihr vor eurem Aufgabenberg sitzt und nicht wisst wie ihr das schaffen sollt, verschafft euch erst einmal einen Überblick. Sortiert die Aufgaben und Termine nach Priorität. Was ist am wichtigsten? Das wird als allererstes erledigt. Und bevor die nächste Aufgabe erledigt wird, muss die erste fertig sein. Immer Schritt für Schritt vorgehen, sonst verliert ihr den Überblick über schon erledigte Dinge und noch anstehende.Ziele abstecken!Jede Aufgabe und jeder Termin sollte ein Ziel haben. Bevor ihr etwas erledigt, prüft ihr nochmal euer gesetztes Ziel. Nur wer sein Ziel immer vor Augen hat, wird auch dort ankommen. Dieser Tipp ist nicht nur gut für jede Aufgabe, die zu erledigen ist, sondern auch für Termine und Gespräche, die ihr führen müsst. Habt immer euer Ziel im Hinterkopf und lenkt ein Gespräch immer wieder in die richtige Richtung, damit es nicht länger dauert als geplant.Entscheidungen treffen!Abwägen und dann entscheiden – und das so schnell wie möglich. Das hört sich leichter an als getan. Entscheidungen zu treffen fällt oft schwer, aber müssen getroffen werden. Je mehr man eine Entscheidung vor sich herschiebt, desto länger dauert es, bis sie erledigt ist und desto mehr steigt der Zeitdruck. Es kann erst weitergehen, wenn die Entscheidung getroffen ist.Nein sagen können!Wenn sich die Aufgabenberge immer höher türmen und das Ende nicht mehr in Sicht ist, sollte schnellstmöglich eingegriffen werden. Ein Nein kann dabei Wunder wirken. Eine Priorisierung der Aufgaben reicht oftmals einfach nicht aus. Aufgaben, die unterhalb einer gewissen Wichtigkeits-Schwelle liegen, sollten gestrichen werden. Das hat nichts mit persönlichem Versagen oder Überforderung zu tun, sondern ist sinnvoll, um trotz der begrenzten Zeit das bestmögliche Ergebnis zu erzielen.Klein anfangen!Je nach Aufgabengröße, ist die Aufgabe viel zu groß, um sie in der kurzen Zeit schaffen zu können. Wenn ihr schon aufgebt, bevor ihr damit angefangen habt, werdet ihr nie euer Ziel erreichen. Teilt die Aufgabe in kleine Teile. Schafft einen Anfang und geht Schritt für Schritt vor. Nach jedem Schritt habt ihr einen Teil der Aufgabe geschafft und könnt euch auf Neues konzentrieren. Sollte die Zeit dann immer noch nicht reichen, macht euch früh Gedanken darüber, wie ihr entweder die gegebene Zeit verlängern könnt (ein Anruf reicht meistens schon und dann bekommt ihr mehr Zeit) oder wie ihr die Aufgabe verkleinern könnt. Nehmt euch die Tipps von oben und organisiert die Aufgabe so, dass ihr einen guten Überblick habt.Das sind nur einige von hunderten von Tipps, die man im Internet oder in Ratgebern finden kann. Es gibt Bücher und Blogs und Artikel über sinnvolles Zeitmanagement und gegen „Aufschieberitis“. Aber im Inneren wissen wir alle, dass es einfach nur wichtig ist, den Schweinehund zu überwinden und sich an die Aufgaben zu machen, die man erledigen muss, auch wenn es mal ungemütlich wird.Nur so findet ihr Zeit für das Wesentliche in den 24 Stunden am Tag. Eure Freizeit, in der ihr euch auf das konzentrieren könnt, was euch Spaß macht und was euch von den Aufgaben und Terminen ablenkt. Und auf die Freizeit könnt ihr euch nur wirklich freuen, wenn ihr nicht ständig die kleine Stimme im Hinterkopf hört, die euch eure Aufgabenliste vorliest und euch daran erinnert, dass ihr noch so viel zu tun habt.","quotes":["„Es ist nicht zu wenig Zeit, die wir haben, sondern es ist zu viel Zeit, die wir nicht nutzen.“ –Lucius Annaeus Seneca (röm. Philosoph, 1 – 65 n. Chr.).","„Müde macht uns die Arbeit, die wir liegenlassen, nicht die, die wir tun.“ – Marie von Ebner-Eschenbach (österreichische Schriftstellerin des 19. Jhd.)."]},{"title":"Entwicklungstool: Yeoman","cat":"Tools & Bücher","date":"18. Dezember 2014","author":"Dominik Sauer","content":"Yo! – Der wohl einfachste Befehl, um einen Projektordner für eine Web-App zu erstellen. Das Entwicklungstool Yeoman erstellt – wie durch Geisterhand – das komplette Grundgerüst für Projekte. Yeoman selbst lässt sich als Node.js Modul durch den Package Manager npm installieren.Bei der Installation sollte man darauf achten, dass dies global geschieht (“-g” oder “–global” in der Konsole). Dies ist nötig, um später aus verschiedenen Projektordnern darauf zugreifen zu können. Yeoman alleine genügt allerdings nicht, um ein Projekt zu erzeugen. Da nicht jeder Entwickler das gleiche Grundgerüst benötigt, gibt es Generatoren. Diese bestimmen die Bestandteile des zu erzeugenden Projekts. Eine Liste mit allen Generatoren ist hier zu finden: http://yeoman.io/generators. Offizielle Generatoren vom Yeoman Entwicklerteam sind mit einem dezenten Schnurrbart gekennzeichnet (). Hat man sich für einen Generator entschieden, muss man auch diesen noch mit npm installieren. Mit dem gulp-webapp Generator sieht dies beispielsweise so aus:Hierbei ist die erste Zeile wichtig, die weiteren werden durch das Terminal bzw. die Konsole während der Installation erzeugt. Aus den gleichen Gründen wie bei Yeoman selbst muss auch der Generator global installiert werden.Nachdem nun sowohl Yeoman als auch ein entsprechender Generator zur Verfügung stehen, kann das Erstellen des Projekts beginnen. Wie anfangs erwähnt, geschieht dies mit dem Befehl yo, der durch den Namen des Generators ergänzt wird. Der Befehl muss in dem Ordner ausgeführt werden, in dem das Projekt initialisiert werden soll:Anschließend wird man mit Anweisungen im Terminal/der Konsole durch die Installation geleitet. Befolgt man alles und schließt die Installation erfolgreich ab, sollte der Projektordner mit folgenden Inhalten erzeugt worden sein:Jetzt steht der Entwicklung der eigenen Web-App nichts mehr im Weg!","quotes":[]},{"title":"Entwicklungstool: Gulp.js","cat":"Tools & Bücher","date":"09. Dezember 2014","author":"Dominik Sauer","content":"Gulp.js ist ein Tool zur automatisierten Ausführung zuvor definierter Aufgaben. Es kann in zahlreichen Bereichen zum Einsatz kommen. Sei es das Starten eines Node.js Webservers oder das Kompilieren von Less-Dateien. Es ist als Node.js Modul verfügbar und daher einfach mit npm installierbar. In diesem Artikel biete ich einen kurzen Einblick in das Tool und die grundlegende Funktionsweise.Grundlage für die automatisierte Ausführung ist die gulpfile.js, eine JavaScript Konfigurationsdatei in Node.js Syntax. Der Entwickler bestimmt darin, welche Aufgaben ausgeführt werden sollen. Gulp greift bei der Ausführung auf diese Datei zu. Der folgende Screenshot zeigt eine definierte Aufgabe, einen sogenannten Task.Dieser kompiliert alle CoffeeScript Dateien eines Ordners und speichert die JavaScript Dateien anschließend in einem anderen Ordner. Der Aufbau ist simpel:‚build_js_from_coffee’ ist der vom Entwickler definierte Name des Tasks.src() verweist auf den Source Ordner, also den Ordner, der die CoffeeScript Dateien enthält (hier: coffee/).coffee() ist der eigentliche Vorgang des Kompilierens.dest() verweist auf den Ausgabe-Ordner, also den Ordner, in dem die JavaScript Dateien gespeichert werden (hier: js/).Der Ablauf wird hierbei schnell ersichtlich: Gulp führt bis zum Beenden des Tasks eine Funktion nach der anderen aus. Dabei arbeitet es mit Streams. Es muss keine Zwischenspeicherung stattfinden und es werden daher neben dem Source und dem Ausgabe Ordner keine weiteren Ordner benötigt. Die magische Node.js Funktion, die dies möglich macht, ist pipe(). Diese schickt die Ausgangsdatei sozusagen von einem Arbeitsschritt zum nächsten.Damit der Tasks reibungslos funktioniert, müssen zuvor allerdings alle benötigten Node.js Module installiert und eingebunden worden sein. Im Beispiel sind dies gulp und gulp-coffee. Die Einbindung geschieht wie folgt:Dadurch stehen die Funktionen gulp() und coffee() (siehe erste Abbildung) zur Verfügung.Nun, nach der Konfiguration, kann Gulp gestartet werden. Dies geschieht im Terminal bzw. der Konsole mit dem Befehlgulp [task]Task wäre in diesem Fall build_js_from_coffee. Ist alles richtig gelaufen, befinden sich nun im js Ordner die kompilierten CoffeeScript Dateien.Gulp bietet ebenfalls die Möglichkeit, mit einem Befehl mehrere Tasks auszuführen:Durch diese Konfiguration würdegulp do_everythingdie beiden in eckigen Klammern definierten Tasks hintereinander ausführen.Gulp benötigt einiges an Einarbeitungszeit. Ist der Grundstein mit einer funktionierenden Konfigurationsdatei allerdings gelegt, profitiert man dank der wegfallenden manuellen Prozesse stark davon.","quotes":[]},{"title":"Package Manager npm und Bower","cat":"Tools & Bücher","date":"01. Dezember 2014","author":"Dominik Sauer","content":"Ein riesiges, zur Verfügung stehendes Spektrum an Software erleichtert die Entwicklung von Web Apps heutzutage ungemein. Im Rahmen dreier Artikel werde ich auf Tools eingehen, die für uns Onlinemedien Studenten bei der Webentwicklung nützlich sein können. Den Anfang machen die Package Manager.\n\nPackage Manager verwalten, wie der Name schon deuten lässt, Programmpakete. Das heißt sie laden diese herunter und binden sie in das eigene Projekt ein. Im Folgenden werde ich mich auf die Package Manager npm und Bower fokussieren und anhand dieser die Funktionsweise erläutern.npm (kurz für Node Package Manager) ist Bestandteil des JavaScript Frameworks Node.js. Die Installation des Frameworks (http://nodejs.org) beinhaltet seit Version 0.63 den Package Manager.Sobald Node.js installiert ist, kann es losgehen. Und zwar in der Konsole bzw. dem Terminal. Befindet man sich im eigenen Projektordner, kann mitnpm install [package-bezeichnung] das entsprechende Package bzw. Node.js Modul eingebunden werden. Im folgenden Screenshot ist dies Less. (Bei der Ausführung können Admin-Rechte nötig sein.)Die zur Verfügung stehenden Module findet man hier: http://npmjs.org. Dort ist auch die genaue Bezeichnung aufgeführt, die zur Installation benötigt wird. npm installiert alle in den Ordner node_modules, den es automatischauf der obersten Ebene des Projektes erzeugt.Bei großen Projekten kann es schnell vorkommen, dass eine große Anzahl an Modulen erforderlich ist. Hierfür gibt es die package.json Datei. In dieser werden alle mit gewünschter Version angegeben. Dies geschieht im JSON Format:Führt man in der Konsole bzw. im Terminal nunnpm installohne spezifische Bezeichnung aus, arbeitet npm automatisch die package.json Datei ab und installiert jedes darin erwähnte Modul (hier: coffee-script und less).Bower funktioniert prinzipiell genauso wie npm, allerdings fokussiert es sich ausschließlich auf Frontend Software. Das heißt mit Bower lassen sich Packages wie Bootstrap oder jQuery installieren. Auch hierbei findet man auf der offiziellen Website eine Übersicht aller verfügbaren Packages: http://bower.io/search. Bower selbst lässt sich einfach mit npm installieren. Die Kommandos haben die gleiche Funktionsweise wie jene von npm und lediglich andere Bezeichnungen:npm install à bower installpackage.json à bower.json","quotes":[]},{"title":"SVG vs. Rastergrafiken","cat":"Aktuelles","date":"28. Oktober 2014","author":"Konstantin","content":"Die Implementierung von grafischen Materialien in Websites bildet ein breites Themenfeld. Dabei stehen sich hauptsächlich zwei Formen der Einbindung gegenüber:Dieser Artikel soll die beiden Formate beschreiben. Dabei sollen die Vor- und Nachteile der beiden Formate betrachtet werden und anhand von Beispielen verdeutlicht werden, wann der Einsatz welcher Technik Sinn macht.SVG steht für Scalable Vector Graphics und beschreibt einen vom W3C empfohlenen Standard zur Beschreibung von Vektor Grafiken. Dabei basiert SVG auf dem XML Format und eignet sich damit speziell für die Einbindung im Web. Durch die Verwendung von speziellen Tags können dabei einzelne grafische Elemente beschrieben oder auch miteinander kombiniert werden. SVG bietet hier verschiedene Standardformen an wie z.B. Kreise, Pfade, Rechtecke oder Polygone. Jedes Element wird zusätzlich über seine Attribute beschrieben. So können z.B. die Füllung, Kontur oder die Transparenz festgelegt werden. Mit HTML5 besteht die Möglichkeit SVG Grafiken direkt im Quelltext zu beschreiben:\nIn diesem Beispiel wird ein Rechteck mit einer Breite (width) von 200px, einer Höhe (height) von 150px und mit der Farbfüllung (fill) “#666666″ definiert. Zusätzlich erhält es eine 4px starke Kontur (stroke-width) in der Farbe (stroke) “#CCCCCC”.  Rastergrafiken bestehen aus einzelnen Bildpunkten (Pixeln) welche einen Farbwert annehmen können. Dabei beschreibt die Auflösung des Bildes auch gleichzeitig die Größe. Rastergrafiken sind das gängigste Format für Grafiken im Web. Dabei kommen verschiedene Kompressionsverfahren zum Einsatz die auch gleichzeitig für verschiedene Einsatzzwecke optimiert sind. Beispielsweise eignet sich das Dateiformat PNG für Grafiken mit einem relativ niedrigen Detailgrad und ebenen Flächen. Zusätzlich wird die Verwendung von Transparenz ermöglicht. JPG Grafiken, wie beispielsweise Fotografien, eignen sich am besten für Grafiken mit sehr hohem Detailgrad. In der Webentwicklung werden sie oft für Layout Zwecke gebraucht z.B. um bestimmte Hintergründe darzustellen oder realistische Texturen zu verwenden.   Beide Grafik Formate haben ihre Daseinsberechtigung. Während sich SVG optimal für die Darstellung von einfachen geometrischen Formen eignet, können komplexe Rastergrafiken mit relativ geringen Dateigrößen dargestellt werden. Durch seinen vielfältigen Einsatz bietet sich vor allem SVG für dynamische und interaktive Grafiken an. Der Einsatz von Animationen kann Websites lebendiger erscheinen lassen und garantiert eine höhere User Experience. Für den Einsatz von einfachen grafischen Materialien ist in allen Fällen SVG die bessere Wahl. Logos, Icons, oder weitere kleine Elemente können so Ressourcenschonend eingebunden werden. Die Rastergrafiken sollten dabei vorwiegend bei komplexeren grafischen Materialien eingesetzt werden. Gänzlich auf sie zu verzichten ist nach heutigem Stand nicht möglich, da es keine konkrete Alternative gibt. Hier muss durch verschiedene technische Maßnahmen eine optimale Darstellung auf allen Endgeräten realisiert werden.","quotes":[]},{"title":"Quiz On – das Quiz für Onlinemedienstudenten","cat":"Aktuelles","date":"22. Oktober 2014","author":"Michael Frey","content":"Es gibt das Sprichwort: “Man soll gehen wenn es am schönsten ist.”  So oder zumindest so ähnlich ist es auch im Onlinemedienstudium an  der DHBW Mosbach. Einige der tollsten Projekte kommen zum Schluss. So zum Beispiel das Browsergame Webingen oder aber die App Quiz ON, eine Quiz App angelehnt an die bekannte App Quizduell.Mit Quiz ON ist es Studenten des Studienganges Onlinemedien hier an der DHBW möglich entspannt zu lernen. Dadurch, dass das Lernen mit Spaß verbunden wird, lernt man spielerisch. Dieses Prinzip nennt sich Gamification. Gamification bedeutet, dass spielfremde Elemente mit Dingen aus der Spielewelt verbunden werden. So soll im Fall der Quiz App die Motivation gesteigert werden zu lernen.  Die Fragen drehen sich rund um die Fächer des Studiums und kommen von den Studenten selbst.Wie geht man denn vor, wenn man eine Quiz App programmieren möchte? In unserem Fall war die Erstellung von Quiz ON in zwei Phasen aufgeteilt. So wurde in einem Projekt zuerst die Konzeption der Inhalte vorgenommen. Das bedeutet es musste überlegt werden, wie die Inhalte aufgebaut werden und welche Inhalte es überhaupt in das Quiz schaffen.So haben wir uns beispielsweise dafür entschieden nur geschlossene Fragen zu nutzen und immer vier Antwortmöglichkeiten vorzugeben.In einem zweiten Projekt wurde dann die Umsetzung der App in Angriff genommen. Hier musste zuerst natürlich wieder geplant werden. Diesmal aber eher welche Tabellen die Datenbank benötigt (Einige) und welches Framework wir benutzen sollen (Yii)Danah ging es mit der Programmierung los. Wir haben uns dazu entschieden die Aufgaben etwas aufzuteilen um schneller voranzukommen. So konnte sich jeder richtig in sein Thema vertiefen. Das Projekt stand ganz im Zeichen von Scrum. Bei Scrum handelt es sich um eine agile Methode zum Projektmanagement.  So konnten wir auch in diesem Bereich Erfahrungen im Einsatz dieser Methode sammeln. Die verschiedenen Rollen wie die des Produkt Owners und des Scrum Masters wurden in der Gruppe vergeben. Zum Entwicklerteam gehörten sebstverständlich trotzdem alle  Hier ist festzuhalten, dass wir zum Ende des Projekts alle von Scrum überzeugt waren und und darauf freuen diese Methode auch in der freien Wildbahn zu benutzten.Das Projekt hat allen Mitgliedern unserer Gruppe großen Freude bereitet. Wir haben alle sehr viel gelernt und wissen jetzt noch etwas besser, wie es in der Wirtschaft zugeht.Da wir, wie alle Onlinemedienstudenten,  Social Credits verdienen müssen, haben wir uns sehr gerne dazu bereit erklärt die App weiter zu entwickeln. So sind Beispielsweise noch Fehler ausgebügelt und ein zwei Features eingebaut worden.Wir hoffen, dass die App tatsächlich Studenten hilft, sich spielerisch auf Prüfungen vorzubereiten. In diesem Sinne: Game ON! ","quotes":[]}]}